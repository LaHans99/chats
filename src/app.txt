import Feed from "./components/Feed";
import Rightbar from "./components/Rightbar";
import Sidebar from "./components/Sidebar";
import Navbar from "./components/Navbar";
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';


import { initializeApp } from 'firebase/app';
import {firebase } from 'firebase/app';

//import { firestore } from 'firebase/firestore';

import { getAuth } from 'firebase/auth';

import {useAuthState} from 'react-firebase-hooks/auth';
import {useCollectionData} from 'react-firebase-hooks/firestore';


  firebase.initializeApp({

  apiKey: "AIzaSyCfHBI7YwiQCdjfrlKdQdl7eQJDL8WhLZA",
  authDomain: "chat-40563.firebaseapp.com",
  projectId: "chat-40563",
  storageBucket: "chat-40563.appspot.com",
  messagingSenderId: "391894232504",
  appId: "1:391894232504:web:44fc790c55b8c1c82ef34d",
  measurementId: "G-R10P2VW41J"


})

const auth = firebase.auth();
const firestore = firebase.firestore();

function App() {
  return (
    <Box>
      <Navbar />
      <Stack
        direction="row"
        spacing={5}
        justifyContent="space-between"
        sx={{ width: '100%' }} // Establece un ancho m√°ximo para todo el Stack
      >
       
       
        <div style={{ flex: '1' }}>
          <Sidebar sx={{ width: '20%' }} /> {/* Establece el ancho deseado para Sidebar*/}
        </div> 
        {/*
        <div style={{ flex: '3' }}>
          <Feed sx={{ width: '60%' }} /> {/* Establece el ancho deseado para Feed 
        </div> */}
       {/* <div style={{ flex: '1' }}>
          <Rightbar sx={{ width: '20%' }} />  Establece el ancho deseado para Rightbar 
        </div>*/}


      </Stack>
    </Box>
  );

}

export default App;











import React, { useRef, useState } from 'react';
import './App.css';
import Navbar from "./components/Navbar";

import firebase from 'firebase/compat/app';
import 'firebase/compat/firestore';
import 'firebase/compat/auth';
import 'firebase/compat/analytics';

import { useAuthState } from 'react-firebase-hooks/auth';
import { useCollectionData } from 'react-firebase-hooks/firestore';
import { initializeApp } from 'firebase/compat/app';
import { getAuth } from 'firebase/auth';
import { getFirestore } from 'firebase/firestore';
// Import other Firebase features as needed

firebase.initializeApp({

  apiKey: "AIzaSyCfHBI7YwiQCdjfrlKdQdl7eQJDL8WhLZA",
  authDomain: "chat-40563.firebaseapp.com",
  projectId: "chat-40563",
  storageBucket: "chat-40563.appspot.com",
  messagingSenderId: "391894232504",
  appId: "1:391894232504:web:44fc790c55b8c1c82ef34d",
  measurementId: "G-R10P2VW41J"

})

const auth = firebase.auth();
const firestore = firebase.firestore();
const analytics = firebase.analytics();


function App() {

  const [user] = useAuthState(auth);

  return (
    <div className="App">
      
      <header>
      
        <h1>‚öõÔ∏èüî•Tec Nexus chatüí¨</h1>
        <SignOut />
        <Navbar/>
      </header>

      <section>
        {user ? <ChatRoom /> : <SignIn />}
      </section>

    </div>
  );
}

function SignIn() {

  const signInWithGoogle = () => {
    const provider = new firebase.auth.GoogleAuthProvider();
    auth.signInWithPopup(provider);
  }

  return (
    <>
      <button className="sign-in" onClick={signInWithGoogle}>Sign in with Google</button>
      <p>Hello TecNexus Users!</p>
    </>
  )

}

function SignOut() {
  return auth.currentUser && (
    <button className="sign-out" onClick={() => auth.signOut()}>Sign Out</button>
  )
}


function ChatRoom() {
  const dummy = useRef();
  const messagesRef = firestore.collection('messages');
  const query = messagesRef.orderBy('createdAt').limit(25);

  const [messages] = useCollectionData(query, { idField: 'id' });

  const [formValue, setFormValue] = useState('');


  const sendMessage = async (e) => {
    e.preventDefault();

    const { uid, photoURL } = auth.currentUser;

    await messagesRef.add({
      text: formValue,
      createdAt: firebase.firestore.FieldValue.serverTimestamp(),
      uid,
      photoURL
    })

    setFormValue('');
    dummy.current.scrollIntoView({ behavior: 'smooth' });
  }

  return (<>
    <main>

      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}

      <span ref={dummy}></span>

    </main>

    <form onSubmit={sendMessage}>

      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder="say something nice" />

      <button type="submit" disabled={!formValue}>üïäÔ∏è</button>

    </form>
  </>)
}


function ChatMessage(props) {
  const { text, uid, photoURL } = props.message;

  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';

  return (<>
    <div className={`message ${messageClass}`}>
      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />
      <p>{text}</p>
    </div>
  </>)
}


export default App;









import Feed from "./components/Feed";
import Rightbar from "./components/Rightbar";
import Sidebar from "./components/Sidebar";
import Navbar from "./components/Navbar";
import Box from '@mui/material/Box';
import Stack from '@mui/material/Stack';
import HomeChat from './components/pages/HomeChat';
import style from './components/style.css';


function App() {
  return (
    <Box>
      <Navbar />
      <Stack
        direction="row"
        spacing={5}
        justifyContent="space-between"
        sx={{ width: '100%' }} // Establece un ancho m√°ximo para todo el Stack
      >
       
       
        <div style={{ flex: '1' }}>
          <Sidebar sx={{ width: '20%' }} />
        </div> 
        
        
       
        <div style={{ flex: '3' }}>
          <Feed sx={{ width: '60%' }} />
          </div>
          
           {/* Establece el ancho deseado para Feed 
        </div> */}
       {/* <div style={{ flex: '1' }}>
          <Rightbar sx={{ width: '20%' }} />  Establece el ancho deseado para Rightbar 
        </div>*/}


      </Stack>
    </Box>
  );

}

export default App;

